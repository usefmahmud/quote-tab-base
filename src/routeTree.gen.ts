/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as QuotesIndexImport } from './routes/quotes/index'
import { Route as CategoriesIndexImport } from './routes/categories/index'
import { Route as AddQuoteIndexImport } from './routes/add-quote/index'
import { Route as QuotesQuoteIdIndexImport } from './routes/quotes/$quoteId/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const QuotesIndexRoute = QuotesIndexImport.update({
  id: '/quotes/',
  path: '/quotes/',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesIndexRoute = CategoriesIndexImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => rootRoute,
} as any)

const AddQuoteIndexRoute = AddQuoteIndexImport.update({
  id: '/add-quote/',
  path: '/add-quote/',
  getParentRoute: () => rootRoute,
} as any)

const QuotesQuoteIdIndexRoute = QuotesQuoteIdIndexImport.update({
  id: '/quotes/$quoteId/',
  path: '/quotes/$quoteId/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add-quote/': {
      id: '/add-quote/'
      path: '/add-quote'
      fullPath: '/add-quote'
      preLoaderRoute: typeof AddQuoteIndexImport
      parentRoute: typeof rootRoute
    }
    '/categories/': {
      id: '/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/quotes/': {
      id: '/quotes/'
      path: '/quotes'
      fullPath: '/quotes'
      preLoaderRoute: typeof QuotesIndexImport
      parentRoute: typeof rootRoute
    }
    '/quotes/$quoteId/': {
      id: '/quotes/$quoteId/'
      path: '/quotes/$quoteId'
      fullPath: '/quotes/$quoteId'
      preLoaderRoute: typeof QuotesQuoteIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-quote': typeof AddQuoteIndexRoute
  '/categories': typeof CategoriesIndexRoute
  '/quotes': typeof QuotesIndexRoute
  '/quotes/$quoteId': typeof QuotesQuoteIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-quote': typeof AddQuoteIndexRoute
  '/categories': typeof CategoriesIndexRoute
  '/quotes': typeof QuotesIndexRoute
  '/quotes/$quoteId': typeof QuotesQuoteIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/add-quote/': typeof AddQuoteIndexRoute
  '/categories/': typeof CategoriesIndexRoute
  '/quotes/': typeof QuotesIndexRoute
  '/quotes/$quoteId/': typeof QuotesQuoteIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/add-quote' | '/categories' | '/quotes' | '/quotes/$quoteId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/add-quote' | '/categories' | '/quotes' | '/quotes/$quoteId'
  id:
    | '__root__'
    | '/'
    | '/add-quote/'
    | '/categories/'
    | '/quotes/'
    | '/quotes/$quoteId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddQuoteIndexRoute: typeof AddQuoteIndexRoute
  CategoriesIndexRoute: typeof CategoriesIndexRoute
  QuotesIndexRoute: typeof QuotesIndexRoute
  QuotesQuoteIdIndexRoute: typeof QuotesQuoteIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddQuoteIndexRoute: AddQuoteIndexRoute,
  CategoriesIndexRoute: CategoriesIndexRoute,
  QuotesIndexRoute: QuotesIndexRoute,
  QuotesQuoteIdIndexRoute: QuotesQuoteIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/add-quote/",
        "/categories/",
        "/quotes/",
        "/quotes/$quoteId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/add-quote/": {
      "filePath": "add-quote/index.tsx"
    },
    "/categories/": {
      "filePath": "categories/index.tsx"
    },
    "/quotes/": {
      "filePath": "quotes/index.tsx"
    },
    "/quotes/$quoteId/": {
      "filePath": "quotes/$quoteId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
